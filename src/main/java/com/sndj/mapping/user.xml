<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sndj.user.UserDao">

    <resultMap id="BaseResultMap" type="com.sndj.user.User">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="age" property="age" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, username, age
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap"
            parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from
        user
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="com.sndj.user.User">
        insert into user (id,
        username, age
        )
        values (#{id,jdbcType=INTEGER},
        #{username,jdbcType=VARCHAR},
        #{age,jdbcType=INTEGER}
        )
    </insert>

    <insert id="insertSelective" parameterType="com.sndj.user.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="age != null">
                age,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                #{age,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.sndj.user.User">
        update user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                age = #{age,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.sndj.user.User">
        update user
        set username = #{username,jdbcType=VARCHAR},
        age =
        #{age,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <!--<resultMap type="com.sndj.user.UserInfo" id="UserCourseMap"
               extends="BaseResultMap">
        <collection property="courseInfos" javaType="list"
                    ofType="org.andy.shop.model.CourseInfo">
            <id property="id" column="course_id" jdbcType="INTEGER"/>
            <result property="cname" column="cname" jdbcType="VARCHAR"/>
            <result property="caddress" column="caddress" jdbcType="VARCHAR"/>
        </collection>


    </resultMap>
    <select id="selectAll" resultMap="UserCourseMap">
        select u.id, u.uname,
        u.unumber, c.id course_id, c.cname, c.caddress from user_info u left
        join course_user_info cu on u.id = cu.uid
        left join course_info c on
        cu.cid = c.id
    </select>-->

    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
    </select>
</mapper>